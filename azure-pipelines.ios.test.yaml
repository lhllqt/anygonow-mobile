# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  branches:
    include:
    - dev
  batch: true
  
name: 1.3.$(Rev:r)

jobs:

- job: IOS
  displayName: Build_IOS
  pool:
    name: MAC
  variables:
    - name: configuration
      value: "Release-dev"
    - name: sdk
      value: "iphoneos"
    - name: iosReleaseDir
      value: $(Build.SourcesDirectory)/output/$(sdk)/$(configuration)
    - name: ipaFile
      value: $(iosReleaseDir)/handyman.ipa

  steps:
  - checkout: self

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: '$(p12DevFileName)'
      certPwd: '$(p12DevPassword)'
      keychain: 'temp'
      deleteCert: true

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: '$(provisioningDevProfile)'
      removeProfile: true

  - task: FlutterInstall@0
    inputs:
      mode: 'auto'
      channel: 'stable'
      version: 'latest'

  - task: CmdLine@2
    inputs:
      script: 'printf "SERVER_URL=%s\nUPDATE_VERSION_URL=%s\nUPDATE_VERSION_API=%s\n" "$SERVER_URL" "$UPDATE_VERSION_URL"  "$UPDATE_VERSION_API" > .env'

  - task: FlutterBuild@0
    inputs:
      target: 'ios'
      projectDirectory: '.'
      buildName: "$(Build.BuildNumber)"
      buildFlavour: 'dev'
      iosCodesign: false

#
#  - task: InstallAppleCertificate@2
#    inputs:
#      certSecureFile: '$(p12DistributeFileName)'
#      certPwd: '$(p12DistributePassword)'
#      keychain: 'temp'
#      deleteCert: true
#
#  - task: InstallAppleProvisioningProfile@1
#    inputs:
#      provisioningProfileLocation: 'secureFiles'
#      provProfileSecureFile: '$(provisioningDistributeProfile)'
#      removeProfile: true
#

  - task: Xcode@5
    displayName: "Code Sign ipa for Distribution"
    inputs:
      actions: "archive"
      scheme: "dev"
      sdk: "$(sdk)"
      configuration: "$(configuration)"
      xcWorkspacePath: "ios/Runner.xcworkspace"
      xcodeVersion: "default"
      packageApp: true
      signingOption: "manual"
      signingIdentity: "$(APPLE_CERTIFICATE_SIGNING_IDENTITY)"
      provisioningProfileUuid: "$(APPLE_PROV_PROFILE_UUID)"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: IOS'
    inputs:
      PathtoPublish: '$(iosReleaseDir)'
      ArtifactName: mac

